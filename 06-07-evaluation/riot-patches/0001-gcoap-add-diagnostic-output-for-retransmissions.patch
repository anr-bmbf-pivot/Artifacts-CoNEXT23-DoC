From 36abf4012cd4903402338d1059dc9ba03282760c Mon Sep 17 00:00:00 2001
From: Martine Lenders <m.lenders@fu-berlin.de>
Date: Wed, 27 Oct 2021 14:33:35 +0200
Subject: [PATCH] gcoap: add diagnostic output for retransmissions

---
 sys/net/application_layer/gcoap/dns.c   | 12 +++++++++---
 sys/net/application_layer/gcoap/gcoap.c | 18 ++++++++++++++++++
 2 files changed, 27 insertions(+), 3 deletions(-)

diff --git a/sys/net/application_layer/gcoap/dns.c b/sys/net/application_layer/gcoap/dns.c
index 3bfeb22d71..3d86e3c185 100644
--- a/sys/net/application_layer/gcoap/dns.c
+++ b/sys/net/application_layer/gcoap/dns.c
@@ -63,6 +63,8 @@ static ssize_t _req_post_fetch(gcoap_dns_ctx_t *context);
 static void _resp_handler(const gcoap_request_memo_t *memo, coap_pkt_t *pdu,
                           const sock_udp_ep_t *remote);
 
+extern int ts_printf(const char *format, ...);
+
 int gcoap_dns_query(const char *domain_name, void *addr_out, int family,
                     uint8_t method)
 {
@@ -629,10 +631,11 @@ static int _do_block_post_fetch(coap_pkt_t *pdu, const sock_udp_ep_t *remote,
         (slicer.start == 0)) {
         mutex_lock(&context->sync.resp_wait);
     }
+    ts_printf("b;%u\n", pdu->hdr->id);
     len = gcoap_req_send((uint8_t *)pdu->hdr, len, remote, _resp_handler,
                          context);
     if (len <= 0) {
-        printf("gcoap_dns: msg send failed: %d\n", (int)len);
+        ts_printf("gcoap_dns: msg send failed: %d\n", (int)len);
         return len;
     }
     return len;
@@ -708,12 +711,12 @@ static void _resp_handler(const gcoap_request_memo_t *memo, coap_pkt_t *pdu,
     int family = context->family;
 
     if (memo->state == GCOAP_MEMO_TIMEOUT) {
-        printf("gcoap_dns: CoAP request timed out\n");
+        ts_printf("gcoap_dns: CoAP request timed out\n");
         context->res = -ETIMEDOUT;
         goto unlock;
     }
     else if (memo->state == GCOAP_MEMO_ERR) {
-        printf("gcoap_dns: error in response\n");
+        ts_printf("gcoap_dns: error in response\n");
         context->res = -EBADMSG;
         goto unlock;
     }
@@ -734,6 +737,7 @@ static void _resp_handler(const gcoap_request_memo_t *memo, coap_pkt_t *pdu,
         goto unlock;
     }
     if (coap_get_code_raw(pdu) == COAP_CODE_CONTINUE) {
+        ts_printf("c;%u\n", pdu->hdr->id);
         int res = _do_block_post_fetch(pdu, remote, context);
 
         if (res < 0) {
@@ -774,6 +778,7 @@ static void _resp_handler(const gcoap_request_memo_t *memo, coap_pkt_t *pdu,
                 context->res = -ENOTSUP;
                 goto unlock;
             }
+            ts_printf("c2;%u\n", pdu->hdr->id);
             gcoap_req_init_path_buffer(pdu, (uint8_t *)pdu->hdr,
                                        CONFIG_GCOAP_DNS_PDU_BUF_SIZE,
                                        method, _uri_comp.path,
@@ -824,6 +829,7 @@ static void _resp_handler(const gcoap_request_memo_t *memo, coap_pkt_t *pdu,
                 goto unlock;
             }
             len = coap_opt_finish(pdu, COAP_OPT_FINISH_NONE);
+            ts_printf("b2;%u\n", pdu->hdr->id);
             len = gcoap_req_send((uint8_t *)pdu->hdr, len, remote,
                                  _resp_handler, memo->context);
             if (len <= 0) {
diff --git a/sys/net/application_layer/gcoap/gcoap.c b/sys/net/application_layer/gcoap/gcoap.c
index b9046cc995..5a9d32e3b9 100644
--- a/sys/net/application_layer/gcoap/gcoap.c
+++ b/sys/net/application_layer/gcoap/gcoap.c
@@ -137,6 +137,8 @@ static event_timeout_t _dtls_session_free_up_tmout;
 static event_callback_t _dtls_session_free_up_tmout_cb;
 #endif
 
+extern int ts_printf(const char *format, ...);
+
 /* Event loop for gcoap _pid thread. */
 static void *_event_loop(void *arg)
 {
@@ -445,6 +447,14 @@ static void _on_resp_timeout(void *arg) {
 
         gcoap_socket_t socket;
         _tl_init_coap_socket(&socket);
+        const coap_hdr_t *hdr;
+        if (memo->send_limit == GCOAP_SEND_LIMIT_NON) {
+            hdr = (coap_hdr_t *)(&memo->msg.hdr_buf[0]);
+        }
+        else {
+            hdr = (coap_hdr_t *)memo->msg.data.pdu_buf;
+        }
+        ts_printf("t;%u\n", hdr->id);
         ssize_t bytes = _tl_send(&socket, memo->msg.data.pdu_buf,
                                  memo->msg.data.pdu_len, &memo->remote_ep);
         if (bytes <= 0) {
@@ -1166,6 +1176,14 @@ ssize_t gcoap_req_send(const uint8_t *buf, size_t len,
     }
 
     if (res == 0) {
+        const coap_hdr_t *hdr;
+        if (memo->send_limit == GCOAP_SEND_LIMIT_NON) {
+            hdr = (coap_hdr_t *)(&memo->msg.hdr_buf[0]);
+        }
+        else {
+            hdr = (coap_hdr_t *)memo->msg.data.pdu_buf;
+        }
+        ts_printf("t;%u\n", hdr->id);
         res = _tl_send(&socket, buf, len, remote);
     }
     if (res <= 0) {
-- 
2.34.1

