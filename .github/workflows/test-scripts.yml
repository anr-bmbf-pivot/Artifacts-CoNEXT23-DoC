name: Test scripts

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.8', '3.7']
        script_collection:
          - 05-dns-empirical/collect
          - 05-dns-empirical/plot
          - scripts/exp_ctrl
          - scripts/plots
        include:
          - python-version: '3.10'
            script_collection: 05-dns-empirical/collect
          - python-version: '3.10'
            script_collection: 05-dns-empirical/plot
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Install LaTeX and matplotlib dependencies (for plots)
      if: contains(matrix.script_collection, 'plot')
      run: |
        sudo apt-get update
        sudo apt-get install texlive-full python3-matplotlib
    - name: Test ${{ matrix.script_collection }} scripts
      run: |
        cd ${{ matrix.script_collection }}
        pyenv="py$(echo "${{ matrix.python-version }}" | tr -d '.')"
        toxenvs="lint,flake8,black,${pyenv}-test"
        tox -e ${toxenvs}
    - if: matrix.script_collection == 'scripts/plots'
      env:
        script_collection: ${{ matrix.script_collection }}
      run: |
        script_collection="${script_collection////-}"
        echo "script_collection=${script_collection}" >> ${GITHUB_ENV}
    - uses: actions/upload-artifact@v2
      name: Generate plots artifacts
      if: matrix.script_collection == 'scripts/plots'
      with:
        name: Plots (python ${script_collection}, ${{ matrix.python-version }})
        path: results/*.svg
