name: Build applications

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
  schedule:
    - cron: '52 1 * * 2'

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 7
      fail-fast: false
      matrix:
        board:
          - iotlab-m3
          - nrf52840dk
        app:
          - 06-07-evaluation/apps/requester
          - 06-07-evaluation/apps/proxy
          - 06-07-evaluation/RIOT/examples/gnrc_border_router
        dns_transport: [coap, coaps, dtls, oscore, udp]
        exclude:
          - app: 06-07-evaluation/RIOT/examples/gnrc_border_router
            dns_transport: coap
          - app: 06-07-evaluation/RIOT/examples/gnrc_border_router
            dns_transport: coaps
          - app: 06-07-evaluation/RIOT/examples/gnrc_border_router
            dns_transport: dtls
          - app: 06-07-evaluation/RIOT/examples/gnrc_border_router
            dns_transport: oscore
          - app: 06-07-evaluation/apps/proxy
            dns_transport: coaps
          - app: 06-07-evaluation/apps/proxy
            dns_transport: dtls
          - app: 06-07-evaluation/apps/proxy
            dns_transport: oscore
          - app: 06-07-evaluation/apps/proxy
            dns_transport: udp
    steps:
    - uses: actions/checkout@main
      with:
        submodules: true
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Provide app name to environment
      run: |
        app_name="$(basename ${{ matrix.app }})"
        echo "app_name=${app_name}" >> ${GITHUB_ENV}
    - uses: actions/cache@main
      id: cache-arm-toolchain
      with:
        path: opt
        key: ${{ runner.os }}-arm-toolchain-10.3-2021.07
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install build-essential make
    - name: Install ARM toolchain
      if: steps.cache-arm-toolchain.outputs.cache-hit != 'true'
      # adopted from https://github.com/RIOT-OS/riotdocker/blob/d4e7ed0/riotbuild/Dockerfile#L113
      run: >
        mkdir -p opt &&
        curl -sL -o opt/gcc-arm-none-eabi.tar.bz2 https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.07/gcc-arm-none-eabi-10.3-2021.07-x86_64-linux.tar.bz2 &&
        echo "b56ae639d9183c340f065ae114a30202 opt/gcc-arm-none-eabi.tar.bz2" | md5sum -c &&
        tar -C opt -jxf opt/gcc-arm-none-eabi.tar.bz2
        && ls opt
    - name: Build application
      run: >
        PATH="${PATH}:${GITHUB_WORKSPACE}/opt/gcc-arm-none-eabi-10.3-2021.07/bin"
        BOARD="${{ matrix.board }}"
        DNS_TRANSPORT="${{ matrix.dns_transport }}"
        make -C "${{ matrix.app }}" -j
    - uses: actions/upload-artifact@main
      name: Archive ELF files
      with:
        name: ${{ env.app_name }}-${{ matrix.dns_transport }}-${{ env.WITH_COAP_CACHE }}-${{ env.WITH_DNS_CACHE }}-${{ env.DOH_LIKE }}-${{ matrix.board }}
        path: ${{ matrix.app }}/bin/${{ matrix.board }}/*.elf
